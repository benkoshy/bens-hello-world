
name: publish-gem-and-tag

on: 
  workflow_dispatch:    

jobs:
  publish-gem-and-tag:
    runs-on: ubuntu-latest

    steps:
 
      - uses: actions/checkout@v2  # checks out default branch
      
      - uses: ruby/setup-ruby@v1
        with:          
          ruby-version: 3.0.0      
      - run: bundle install      

      - name: publish gem
        run: |
          mkdir -p $HOME/.gem
          touch $HOME/.gem/credentials
          chmod 0600 $HOME/.gem/credentials
          printf -- "---\n:rubygems_api_key: ${GEM_HOST_API_KEY}\n" > $HOME/.gem/credentials
          gem build *.gemspec
          gem push *.gem
        env:          
          GEM_HOST_API_KEY: "${{secrets.RUBYGEMS_AUTH_TOKEN}}"

      #   now, after the gem has been successfully published
      #   we would need to automatically tag based on the current commit      

      #   # We wanna use this one for pagy
      #   echo "::set-output name=version::$(sed -nr "s/.*VERSION\s*=\s*('|\")([^'\"]+).*$/\2/p" $(echo "$GITHUB_WORKSPACE/lib/pagy.rb"))"

      # - name: Get version number
      #   id: version
      #   run: |          
      #     echo "::set-output name=version::$(sed -nr "s/.*VERSION\s*=\s*('|\")([^'\"]+).*$/\2/p" $(echo "$GITHUB_WORKSPACE/lib/bens/hello/world/version.rb"))"
      #  - name: Create tag
      #   uses: actions/github-script@v3
      #   with:
      #     github-token: ${{ github.token }}
      #     script: |
      #       github.git.createRef({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         ref: `refs/tags/${{steps.version.outputs.version}}`,
      #         sha: context.sha
      #       })

      - name: Create tag
        uses: actions/github-script@v3
        with:
          github-token: ${{ github.token }}
          script: |
            const fs = require("fs")
            eval(fs.readFileSync("./lib/javascripts/pagy.js").toString())
            
            github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${Pagy.version}`,
              sha: context.sha
            })
